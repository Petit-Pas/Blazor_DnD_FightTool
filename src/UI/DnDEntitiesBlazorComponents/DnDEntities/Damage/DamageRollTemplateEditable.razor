@using DnDEntitiesBlazorComponents.DnDEntities.Dices.DiceThrows.Components;
@using DnDFightTool.Domain.DnDEntities.Damage;
@using NeoBlazorphic.Components.NeoPopover;
@using NeoBlazorphic.Components.Lists.NeoPlainLists;
@using SharedComponents.Inputs.Buttons


@if (Template != null)
{
     <div class="damage-input-container">
        <NeoPopover @ref=_popOver PopoverOpenedChanged="OnPopoverOpenedChanged">
            <ChildContent>
                <div class="damage-input">
                     <DiceThrowTemplateInput ValidateOnKeyPress="false" @bind-Value="Template.Dices" ValidationFor=@(() => Template.Dices) PrefixPadding="Spacing._0">
                        <PrefixRenderFragment>
                            <div class="select p-2" @onclick="() => _popOver.TogglePopoverAsync()">
                                <div class="selected-element">
                                    @Template.Type.ToReadableString()
                                </div>
                                <div class="select-padding"></div>
                                <div class="select-arrow @(_popOver.PopoverOpened ? "open" : "")">
                                    <i class="fas fa-caret-up" />
                                </div>
                            </div>
                        </PrefixRenderFragment>
                        <SuffixRenderFragment>
                            <DeleteButton OnClick="NotifyDeleted" />
                        </SuffixRenderFragment>
                    </DiceThrowTemplateInput>
                </div>
            </ChildContent>
            <PopoverContent>
                <div class="select-popover">
                    <NeoPlainList T=DamageTypeEnum Items="DamageTypeEnumExtensions.All" OnElementClickCallBack="UpdateType">
                        <ItemRenderFragment Context="item">
                            <div class="select-item p-1">
                                @item.ToReadableString()
                            </div>
                        </ItemRenderFragment>
                    </NeoPlainList>
                </div>
            </PopoverContent>
        </NeoPopover>
    </div> 
}

