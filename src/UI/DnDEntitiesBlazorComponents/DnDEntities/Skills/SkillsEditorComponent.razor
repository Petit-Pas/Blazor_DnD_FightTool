@using DnDEntitiesBlazorComponents.DnDEntities.AbilityScores
@using DnDFightTool.Domain.DnDEntities.AbilityScores
@using Extensions
@using MudBlazor
@using DnDFightTool.Domain.DnDEntities.Skills;
@using SharedComponents
@using SharedComponents.Icons;

@inherits StylableComponentBase

@if (Character is not null)
{
    <MudPaper Class="@("p-3 d-flex flex-column h-100" + Class)" Style=@Style Elevation="2" Square>
        <MudText Class="mb-2" Typo="Typo.h5"> Skills </MudText>
        <MudTable ContainerClass="pt-2" Class="overflow-y-auto" Elevation=0 Items="@Character.Skills.Values" Dense="true" Striped="true" Hover="true">
            <RowTemplate>
                <MudTd class="w-1">
                    <MudIconButton Icon="@GetIconFor(context)" OnClick="@context.IncreaseMastery" @oncontextmenu="@context.DecreaseMastery" Color=Color.Primary />
                </MudTd>
                <MudTd class="w-1">
                    <MudMenu>
                        <ActivatorContent>
                            <AbilityChip Ability=@context.Ability
                                         BadgeContent=@context.GetModifier(Character).ToString()
                                         Variant=Variant.Filled
                                         Color=Color.Primary/>
                        </ActivatorContent>
                        <ChildContent>
                            @foreach (var abilityEnum in Enum.GetValues<AbilityEnum>())
                            {
                                <MudMenuItem OnClick="() => context.Ability = abilityEnum" >
                                    <MudText Class="@(abilityEnum == context.Ability ? "fw-bold" : "")">
                                        @($"{abilityEnum.ShortName()}{(context.DefaultAbility == abilityEnum ? " (default)" : "")}")
                                    </MudText>
                                </MudMenuItem>
                            }
                        </ChildContent>
                    </MudMenu>
                </MudTd>
                <MudTd> @context.Name.ToReadableString() </MudTd>
            </RowTemplate>
        </MudTable>
    </MudPaper>
}
