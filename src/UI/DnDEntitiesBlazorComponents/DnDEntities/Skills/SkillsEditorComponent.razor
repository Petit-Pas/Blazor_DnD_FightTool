@using DnDFightTool.Domain.DnDEntities.AbilityScores
@using Extensions
@using MudBlazor
@using DnDFightTool.Domain.DnDEntities.Skills;
@using SharedComponents.Icons;

@if (Character is not null)
{
    <MudPaper Class="pa-4 d-flex flex-column h-100" Elevation="2" Square>
        <MudText Class="mb-2" Typo="Typo.h5"> Skills </MudText>
        <MudTable ContainerClass="pt-2" Class="flex-fill-scroll" Elevation=0 Items="@Character.Skills" Dense="true" Striped="true" Hover="true">
            <RowTemplate>
                <MudTd class="w-1">
                    <MudIconButton Icon="@GetIconFor(context.Value)" OnClick="@context.Value.RotateMastery" Color=Color.Primary />
                </MudTd>
                <MudTd class="w-1">
                    <MudMenu>
                        <ActivatorContent>
                            <MudBadge Class="ability-score-badge" Color="Color.Secondary" Overlap="true" Content="context.Value.GetModifier(Character).ToString()">
                                <MudChip Class="ability-score-chip" T="string" Variant=Variant.Filled Color=Color.Primary CloseIcon="@Icons.Material.Filled.ArrowDropUp">
                                    <MudText>
                                        @(context.Value.Ability.ShortName())
                                    </MudText>
                                </MudChip>
                            </MudBadge>
                        </ActivatorContent>
                        <ChildContent>
                            @foreach (var abilityEnum in Enum.GetValues<AbilityEnum>())
                            {
                                <MudMenuItem OnClick="() => context.Value.Ability = abilityEnum" >
                                    <MudText Class="@(abilityEnum == context.Value.Ability ? "fw-bold" : "")">
                                        @($"{abilityEnum.ShortName()}{(context.Value.DefaultAbility == abilityEnum ? " (default)" : "")}")
                                    </MudText>
                                </MudMenuItem>
                            }
                        </ChildContent>
                    </MudMenu>
                </MudTd>
                <MudTd> @context.Key.ToReadableString() </MudTd>
            </RowTemplate>
        </MudTable>
    </MudPaper>
}
