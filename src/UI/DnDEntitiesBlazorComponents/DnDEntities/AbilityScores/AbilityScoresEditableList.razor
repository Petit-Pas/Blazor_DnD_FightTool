@using DnDEntities.AbilityScores;
@using DnDFightTool.Domain.DnDEntities.AbilityScores;

<Card BorderType=NeoBorderType.NeoLightBorder Padding="Spacing._0" SelectableText="false" BorderRadius="@BorderRadius">
    @if (Abilities != null)
    {
        <div class="characteristic-container">

            @{
                var i = 1;
            }
            @foreach (var abilityScore in Abilities)
            {
                <div class="characteristic-row" style="grid-row: @i;">
                    <IntInput ValidateOnKeyPress="true" @bind-Value="abilityScore.Score" ValidationFor="@(() => abilityScore.Score)">
                        <PrefixRenderFragment>
                            <div class="characteristic-label">
                                @abilityScore.Ability.ShortName()
                            </div>
                        </PrefixRenderFragment>
                        <SuffixRenderFragment>
                            <div class="characteristic-modifier">
                                @Abilities.GetModifierWithMastery(abilityScore.Ability).ModifierString
                            </div>
                        </SuffixRenderFragment>
                    </IntInput>
                </div>
                <div class="characterisitc-mastery" style="grid-row: @i;">
                    <CheckBox @bind-IsChecked="@abilityScore.HasMastery" Color="ThemeColor.Primary" IsEnabled="true"></CheckBox>
                </div>

                i += 1;
            }
            <div class="mastery-bonus">
                <IntInput ValidateOnKeyPress="true" @bind-Value="@Abilities.MasteryBonus" ValidationFor="@(() => @Abilities.MasteryBonus)">
                    <PrefixRenderFragment>
                        <div>
                            Mastery bonus
                        </div>
                    </PrefixRenderFragment>
                </IntInput>
            </div>
        </div>
    }
</Card>
